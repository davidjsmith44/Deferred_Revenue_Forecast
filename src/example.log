DEBUG:deferred_logger:Processing the Base Billings Data
DEBUG:deferred_logger: df_columns = (df.columns)
DEBUG:deferred_logger:Model dictionary = (model_dict)
DEBUG:deferred_logger:length of billings data before currencies removed = (len(df))
DEBUG:deferred_logger:length of billings data AFTER currencies removed = (len(df))
DEBUG:deferred_logger:---Removing infrequent currencies from billings history---
DEBUG:deferred_logger:Total number of currencies in the base billings file: (len(vc))
DEBUG:deferred_logger:
 Currencies were removed: (len(model_dict["curr_removed"]))
DEBUG:deferred_logger:Processing the Base Billings Data
DEBUG:deferred_logger: df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
DEBUG:deferred_logger:Model dictionary = (model_dict)
DEBUG:deferred_logger:length of billings data before currencies removed = (len(df))
DEBUG:deferred_logger:length of billings data AFTER currencies removed = (len(df))
DEBUG:deferred_logger:---Removing infrequent currencies from billings history---
DEBUG:deferred_logger:Total number of currencies in the base billings file: (len(vc))
DEBUG:deferred_logger:
 Currencies were removed: (len(model_dict["curr_removed"]))
[<ipython-input-1-18b480a4a605>:18 -        <module>()] Processing the Base Billings Data
[<ipython-input-1-18b480a4a605>:39 -        <module>()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[<ipython-input-1-18b480a4a605>:54 -        <module>()] Model dictionary = (model_dict)
[<ipython-input-1-18b480a4a605>:55 -        <module>()] length of billings data before currencies removed = (len(df))
[<ipython-input-1-18b480a4a605>:57 -        <module>()] length of billings data AFTER currencies removed = (len(df))
[<ipython-input-1-18b480a4a605>:61 -        <module>()] ---Removing infrequent currencies from billings history---
[<ipython-input-1-18b480a4a605>:62 -        <module>()] Total number of currencies in the base billings file: (len(vc))
[<ipython-input-1-18b480a4a605>:69 -        <module>()] 
 Currencies were removed: (len(model_dict["curr_removed"]))
[<ipython-input-5-b66e6b5edac6>:12 -        <module>()] Processing the Base Billings Data
[<ipython-input-1-1583d86f9d7a>:24 -        <module>()] Processing the Base Billings Data
[<ipython-input-3-b27e866544e0>:12 -        <module>()] Processing the Base Billings Data
[<ipython-input-1-1583d86f9d7a>:24 -        <module>()] Processing the Base Billings Data
[<ipython-input-1-084cb2cedec1>:24 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1307 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1323 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'OMR', 'LBP', 'BMD', 'AED', 'MXP', 'TRY']}
[deferred_revenue_functions.py:1324 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1326 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1328 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1329 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1336 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1339 - load_base_billings()] SAR
[deferred_revenue_functions.py:1339 - load_base_billings()] BHD
[deferred_revenue_functions.py:1339 - load_base_billings()] KWD
[deferred_revenue_functions.py:1339 - load_base_billings()] JOD
[deferred_revenue_functions.py:1339 - load_base_billings()] EGP
[deferred_revenue_functions.py:1339 - load_base_billings()] OMR
[deferred_revenue_functions.py:1339 - load_base_billings()] LBP
[deferred_revenue_functions.py:1339 - load_base_billings()] BMD
[deferred_revenue_functions.py:1339 - load_base_billings()] AED
[deferred_revenue_functions.py:1339 - load_base_billings()] MXP
[deferred_revenue_functions.py:1341 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_forecast_v3.py:48 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1307 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1323 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'LBP', 'OMR', 'BMD', 'MXP', 'AED', 'TRY']}
[deferred_revenue_functions.py:1324 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1326 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1328 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1329 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1336 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1339 - load_base_billings()] SAR
[deferred_revenue_functions.py:1339 - load_base_billings()] BHD
[deferred_revenue_functions.py:1339 - load_base_billings()] KWD
[deferred_revenue_functions.py:1339 - load_base_billings()] JOD
[deferred_revenue_functions.py:1339 - load_base_billings()] EGP
[deferred_revenue_functions.py:1339 - load_base_billings()] LBP
[deferred_revenue_functions.py:1339 - load_base_billings()] OMR
[deferred_revenue_functions.py:1339 - load_base_billings()] BMD
[deferred_revenue_functions.py:1339 - load_base_billings()] MXP
[deferred_revenue_functions.py:1339 - load_base_billings()] AED
[deferred_revenue_functions.py:1341 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1343 - load_base_billings()] USD
[deferred_revenue_functions.py:1343 - load_base_billings()] EUR
[deferred_revenue_functions.py:1343 - load_base_billings()] GBP
[deferred_revenue_functions.py:1343 - load_base_billings()] AUD
[deferred_revenue_functions.py:1343 - load_base_billings()] JPY
[deferred_revenue_functions.py:1343 - load_base_billings()] CHF
[deferred_revenue_functions.py:1343 - load_base_billings()] SEK
[deferred_revenue_functions.py:1343 - load_base_billings()] DKK
[deferred_revenue_functions.py:1343 - load_base_billings()] NOK
[deferred_revenue_functions.py:1343 - load_base_billings()] CAD
[deferred_revenue_functions.py:1343 - load_base_billings()] HKD
[deferred_revenue_functions.py:1343 - load_base_billings()] BRL
[deferred_revenue_functions.py:1343 - load_base_billings()] RUB
[deferred_revenue_functions.py:1343 - load_base_billings()] KRW
[deferred_revenue_functions.py:1343 - load_base_billings()] SGD
[deferred_revenue_functions.py:1343 - load_base_billings()] CLP
[deferred_revenue_functions.py:1343 - load_base_billings()] COP
[deferred_revenue_functions.py:1343 - load_base_billings()] ARS
[deferred_revenue_functions.py:1343 - load_base_billings()] INR
[deferred_revenue_functions.py:1343 - load_base_billings()] PEN
[deferred_revenue_functions.py:1343 - load_base_billings()] PHP
[deferred_revenue_functions.py:1343 - load_base_billings()] TWD
[deferred_revenue_functions.py:1343 - load_base_billings()] THB
[deferred_revenue_functions.py:1343 - load_base_billings()] MYR
[deferred_revenue_functions.py:1343 - load_base_billings()] IDR
[deferred_revenue_functions.py:1343 - load_base_billings()] ILS
[deferred_revenue_functions.py:1343 - load_base_billings()] NZD
[deferred_revenue_functions.py:1346 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1349 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1351 - load_base_billings()] df.head(10) =    curr        BU Frequency   period config rev_req_type rebill_rule Sales Type  Subscription Term   DC_amount  US_amount
1   ARS  Creative       NaN  2019-03     1Y            D         NaN   DEFERRED                  1   -11291.52    -289.26
2   ARS  Creative       NaN  2019-03     1Y            D          Y3   DEFERRED                  1   373766.00    9601.19
3   ARS  Creative       NaN  2019-03     1Y            D          YA   DEFERRED                 12   241380.00    6194.45
4   ARS  Creative       NaN  2019-03  MTHLY            D         NaN   DEFERRED                  1    -1221.00     -31.07
5   ARS  Creative       NaN  2019-03  MTHLY            D          Y3   DEFERRED                  1    45799.00    1173.37
6   ARS  Creative       NaN  2019-04     1Y            D         NaN   DEFERRED                  1   -40014.70    -985.24
7   ARS  Creative       NaN  2019-04     1Y            D          Y3   DEFERRED                  1  1705471.00   42032.83
8   ARS  Creative       NaN  2019-04     1Y            D          YA   DEFERRED                 12  1112854.12   27486.58
9   ARS  Creative       NaN  2019-04  MTHLY            D         NaN   DEFERRED                  1   -14292.80    -351.04
10  ARS  Creative       NaN  2019-04  MTHLY            D          Y3   DEFERRED                  1   188938.00    4653.43
[deferred_revenue_functions.py:1354 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1357 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1361 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1378 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1389 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1395 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1396 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1403 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[deferred_revenue_forecast_v3.py:48 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1307 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1323 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'OMR', 'LBP', 'BMD', 'MXP', 'AED', 'TRY']}
[deferred_revenue_functions.py:1324 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1326 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1328 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1329 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1336 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1339 - load_base_billings()] SAR
[deferred_revenue_functions.py:1339 - load_base_billings()] BHD
[deferred_revenue_functions.py:1339 - load_base_billings()] KWD
[deferred_revenue_functions.py:1339 - load_base_billings()] JOD
[deferred_revenue_functions.py:1339 - load_base_billings()] EGP
[deferred_revenue_functions.py:1339 - load_base_billings()] OMR
[deferred_revenue_functions.py:1339 - load_base_billings()] LBP
[deferred_revenue_functions.py:1339 - load_base_billings()] BMD
[deferred_revenue_functions.py:1339 - load_base_billings()] MXP
[deferred_revenue_functions.py:1339 - load_base_billings()] AED
[deferred_revenue_functions.py:1341 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1343 - load_base_billings()] USD
[deferred_revenue_functions.py:1343 - load_base_billings()] EUR
[deferred_revenue_functions.py:1343 - load_base_billings()] GBP
[deferred_revenue_functions.py:1343 - load_base_billings()] AUD
[deferred_revenue_functions.py:1343 - load_base_billings()] JPY
[deferred_revenue_functions.py:1343 - load_base_billings()] CHF
[deferred_revenue_functions.py:1343 - load_base_billings()] SEK
[deferred_revenue_functions.py:1343 - load_base_billings()] DKK
[deferred_revenue_functions.py:1343 - load_base_billings()] NOK
[deferred_revenue_functions.py:1343 - load_base_billings()] CAD
[deferred_revenue_functions.py:1343 - load_base_billings()] HKD
[deferred_revenue_functions.py:1343 - load_base_billings()] BRL
[deferred_revenue_functions.py:1343 - load_base_billings()] RUB
[deferred_revenue_functions.py:1343 - load_base_billings()] KRW
[deferred_revenue_functions.py:1343 - load_base_billings()] SGD
[deferred_revenue_functions.py:1343 - load_base_billings()] CLP
[deferred_revenue_functions.py:1343 - load_base_billings()] COP
[deferred_revenue_functions.py:1343 - load_base_billings()] ARS
[deferred_revenue_functions.py:1343 - load_base_billings()] PEN
[deferred_revenue_functions.py:1343 - load_base_billings()] INR
[deferred_revenue_functions.py:1343 - load_base_billings()] PHP
[deferred_revenue_functions.py:1343 - load_base_billings()] TWD
[deferred_revenue_functions.py:1343 - load_base_billings()] THB
[deferred_revenue_functions.py:1343 - load_base_billings()] MYR
[deferred_revenue_functions.py:1343 - load_base_billings()] IDR
[deferred_revenue_functions.py:1343 - load_base_billings()] ILS
[deferred_revenue_functions.py:1343 - load_base_billings()] NZD
[deferred_revenue_functions.py:1346 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1349 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1351 - load_base_billings()] df.head(10) =    curr        BU Frequency   period config rev_req_type rebill_rule Sales Type  Subscription Term   DC_amount  US_amount
1   ARS  Creative       NaN  2019-03     1Y            D         NaN   DEFERRED                  1   -11291.52    -289.26
2   ARS  Creative       NaN  2019-03     1Y            D          Y3   DEFERRED                  1   373766.00    9601.19
3   ARS  Creative       NaN  2019-03     1Y            D          YA   DEFERRED                 12   241380.00    6194.45
4   ARS  Creative       NaN  2019-03  MTHLY            D         NaN   DEFERRED                  1    -1221.00     -31.07
5   ARS  Creative       NaN  2019-03  MTHLY            D          Y3   DEFERRED                  1    45799.00    1173.37
6   ARS  Creative       NaN  2019-04     1Y            D         NaN   DEFERRED                  1   -40014.70    -985.24
7   ARS  Creative       NaN  2019-04     1Y            D          Y3   DEFERRED                  1  1705471.00   42032.83
8   ARS  Creative       NaN  2019-04     1Y            D          YA   DEFERRED                 12  1112854.12   27486.58
9   ARS  Creative       NaN  2019-04  MTHLY            D         NaN   DEFERRED                  1   -14292.80    -351.04
10  ARS  Creative       NaN  2019-04  MTHLY            D          Y3   DEFERRED                  1   188938.00    4653.43
[deferred_revenue_functions.py:1354 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1357 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1361 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1378 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1389 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1395 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1396 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1403 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[deferred_revenue_forecast_v3.py:48 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1307 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1323 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'LBP', 'OMR', 'BMD', 'MXP', 'AED', 'TRY']}
[deferred_revenue_functions.py:1324 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1326 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1328 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1329 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1336 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1339 - load_base_billings()] SAR
[deferred_revenue_functions.py:1339 - load_base_billings()] BHD
[deferred_revenue_functions.py:1339 - load_base_billings()] KWD
[deferred_revenue_functions.py:1339 - load_base_billings()] JOD
[deferred_revenue_functions.py:1339 - load_base_billings()] EGP
[deferred_revenue_functions.py:1339 - load_base_billings()] LBP
[deferred_revenue_functions.py:1339 - load_base_billings()] OMR
[deferred_revenue_functions.py:1339 - load_base_billings()] BMD
[deferred_revenue_functions.py:1339 - load_base_billings()] MXP
[deferred_revenue_functions.py:1339 - load_base_billings()] AED
[deferred_revenue_functions.py:1341 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1343 - load_base_billings()] USD
[deferred_revenue_functions.py:1343 - load_base_billings()] EUR
[deferred_revenue_functions.py:1343 - load_base_billings()] GBP
[deferred_revenue_functions.py:1343 - load_base_billings()] AUD
[deferred_revenue_functions.py:1343 - load_base_billings()] JPY
[deferred_revenue_functions.py:1343 - load_base_billings()] CHF
[deferred_revenue_functions.py:1343 - load_base_billings()] SEK
[deferred_revenue_functions.py:1343 - load_base_billings()] DKK
[deferred_revenue_functions.py:1343 - load_base_billings()] NOK
[deferred_revenue_functions.py:1343 - load_base_billings()] CAD
[deferred_revenue_functions.py:1343 - load_base_billings()] HKD
[deferred_revenue_functions.py:1343 - load_base_billings()] BRL
[deferred_revenue_functions.py:1343 - load_base_billings()] RUB
[deferred_revenue_functions.py:1343 - load_base_billings()] KRW
[deferred_revenue_functions.py:1343 - load_base_billings()] SGD
[deferred_revenue_functions.py:1343 - load_base_billings()] CLP
[deferred_revenue_functions.py:1343 - load_base_billings()] COP
[deferred_revenue_functions.py:1343 - load_base_billings()] ARS
[deferred_revenue_functions.py:1343 - load_base_billings()] PEN
[deferred_revenue_functions.py:1343 - load_base_billings()] INR
[deferred_revenue_functions.py:1343 - load_base_billings()] PHP
[deferred_revenue_functions.py:1343 - load_base_billings()] TWD
[deferred_revenue_functions.py:1343 - load_base_billings()] THB
[deferred_revenue_functions.py:1343 - load_base_billings()] MYR
[deferred_revenue_functions.py:1343 - load_base_billings()] IDR
[deferred_revenue_functions.py:1343 - load_base_billings()] ILS
[deferred_revenue_functions.py:1343 - load_base_billings()] NZD
[deferred_revenue_functions.py:1346 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1349 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1351 - load_base_billings()] df.head(10) =    curr        BU Frequency   period config rev_req_type rebill_rule Sales Type  Subscription Term   DC_amount  US_amount
1   ARS  Creative       NaN  2019-03     1Y            D         NaN   DEFERRED                  1   -11291.52    -289.26
2   ARS  Creative       NaN  2019-03     1Y            D          Y3   DEFERRED                  1   373766.00    9601.19
3   ARS  Creative       NaN  2019-03     1Y            D          YA   DEFERRED                 12   241380.00    6194.45
4   ARS  Creative       NaN  2019-03  MTHLY            D         NaN   DEFERRED                  1    -1221.00     -31.07
5   ARS  Creative       NaN  2019-03  MTHLY            D          Y3   DEFERRED                  1    45799.00    1173.37
6   ARS  Creative       NaN  2019-04     1Y            D         NaN   DEFERRED                  1   -40014.70    -985.24
7   ARS  Creative       NaN  2019-04     1Y            D          Y3   DEFERRED                  1  1705471.00   42032.83
8   ARS  Creative       NaN  2019-04     1Y            D          YA   DEFERRED                 12  1112854.12   27486.58
9   ARS  Creative       NaN  2019-04  MTHLY            D         NaN   DEFERRED                  1   -14292.80    -351.04
10  ARS  Creative       NaN  2019-04  MTHLY            D          Y3   DEFERRED                  1   188938.00    4653.43
[deferred_revenue_functions.py:1354 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1357 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1361 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1378 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1389 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1395 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1396 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1403 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[deferred_revenue_forecast_v3.py:48 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1307 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1323 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'OMR', 'LBP', 'BMD', 'AED', 'MXP', 'TRY']}
[deferred_revenue_functions.py:1324 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1326 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1328 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1329 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1336 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1339 - load_base_billings()] SAR
[deferred_revenue_functions.py:1339 - load_base_billings()] BHD
[deferred_revenue_functions.py:1339 - load_base_billings()] KWD
[deferred_revenue_functions.py:1339 - load_base_billings()] JOD
[deferred_revenue_functions.py:1339 - load_base_billings()] EGP
[deferred_revenue_functions.py:1339 - load_base_billings()] OMR
[deferred_revenue_functions.py:1339 - load_base_billings()] LBP
[deferred_revenue_functions.py:1339 - load_base_billings()] BMD
[deferred_revenue_functions.py:1339 - load_base_billings()] AED
[deferred_revenue_functions.py:1339 - load_base_billings()] MXP
[deferred_revenue_functions.py:1341 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1343 - load_base_billings()] USD
[deferred_revenue_functions.py:1343 - load_base_billings()] EUR
[deferred_revenue_functions.py:1343 - load_base_billings()] GBP
[deferred_revenue_functions.py:1343 - load_base_billings()] AUD
[deferred_revenue_functions.py:1343 - load_base_billings()] JPY
[deferred_revenue_functions.py:1343 - load_base_billings()] CHF
[deferred_revenue_functions.py:1343 - load_base_billings()] SEK
[deferred_revenue_functions.py:1343 - load_base_billings()] DKK
[deferred_revenue_functions.py:1343 - load_base_billings()] NOK
[deferred_revenue_functions.py:1343 - load_base_billings()] CAD
[deferred_revenue_functions.py:1343 - load_base_billings()] HKD
[deferred_revenue_functions.py:1343 - load_base_billings()] BRL
[deferred_revenue_functions.py:1343 - load_base_billings()] RUB
[deferred_revenue_functions.py:1343 - load_base_billings()] KRW
[deferred_revenue_functions.py:1343 - load_base_billings()] SGD
[deferred_revenue_functions.py:1343 - load_base_billings()] CLP
[deferred_revenue_functions.py:1343 - load_base_billings()] COP
[deferred_revenue_functions.py:1343 - load_base_billings()] ARS
[deferred_revenue_functions.py:1343 - load_base_billings()] INR
[deferred_revenue_functions.py:1343 - load_base_billings()] PEN
[deferred_revenue_functions.py:1343 - load_base_billings()] PHP
[deferred_revenue_functions.py:1343 - load_base_billings()] TWD
[deferred_revenue_functions.py:1343 - load_base_billings()] THB
[deferred_revenue_functions.py:1343 - load_base_billings()] MYR
[deferred_revenue_functions.py:1343 - load_base_billings()] IDR
[deferred_revenue_functions.py:1343 - load_base_billings()] ILS
[deferred_revenue_functions.py:1343 - load_base_billings()] NZD
[deferred_revenue_functions.py:1346 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1349 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1351 - load_base_billings()] df.head(10) =    curr        BU Frequency   period config rev_req_type rebill_rule Sales Type  Subscription Term   DC_amount  US_amount
1   ARS  Creative       NaN  2019-03     1Y            D         NaN   DEFERRED                  1   -11291.52    -289.26
2   ARS  Creative       NaN  2019-03     1Y            D          Y3   DEFERRED                  1   373766.00    9601.19
3   ARS  Creative       NaN  2019-03     1Y            D          YA   DEFERRED                 12   241380.00    6194.45
4   ARS  Creative       NaN  2019-03  MTHLY            D         NaN   DEFERRED                  1    -1221.00     -31.07
5   ARS  Creative       NaN  2019-03  MTHLY            D          Y3   DEFERRED                  1    45799.00    1173.37
6   ARS  Creative       NaN  2019-04     1Y            D         NaN   DEFERRED                  1   -40014.70    -985.24
7   ARS  Creative       NaN  2019-04     1Y            D          Y3   DEFERRED                  1  1705471.00   42032.83
8   ARS  Creative       NaN  2019-04     1Y            D          YA   DEFERRED                 12  1112854.12   27486.58
9   ARS  Creative       NaN  2019-04  MTHLY            D         NaN   DEFERRED                  1   -14292.80    -351.04
10  ARS  Creative       NaN  2019-04  MTHLY            D          Y3   DEFERRED                  1   188938.00    4653.43
[deferred_revenue_functions.py:1354 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1357 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1361 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1378 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1389 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1395 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1396 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1403 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[deferred_revenue_forecast_v3.py:48 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1307 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1323 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'OMR', 'LBP', 'BMD', 'AED', 'MXP', 'TRY']}
[deferred_revenue_functions.py:1324 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1326 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1328 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1329 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1336 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1339 - load_base_billings()] SAR
[deferred_revenue_functions.py:1339 - load_base_billings()] BHD
[deferred_revenue_functions.py:1339 - load_base_billings()] KWD
[deferred_revenue_functions.py:1339 - load_base_billings()] JOD
[deferred_revenue_functions.py:1339 - load_base_billings()] EGP
[deferred_revenue_functions.py:1339 - load_base_billings()] OMR
[deferred_revenue_functions.py:1339 - load_base_billings()] LBP
[deferred_revenue_functions.py:1339 - load_base_billings()] BMD
[deferred_revenue_functions.py:1339 - load_base_billings()] AED
[deferred_revenue_functions.py:1339 - load_base_billings()] MXP
[deferred_revenue_functions.py:1341 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1343 - load_base_billings()] USD
[deferred_revenue_functions.py:1343 - load_base_billings()] EUR
[deferred_revenue_functions.py:1343 - load_base_billings()] GBP
[deferred_revenue_functions.py:1343 - load_base_billings()] AUD
[deferred_revenue_functions.py:1343 - load_base_billings()] JPY
[deferred_revenue_functions.py:1343 - load_base_billings()] CHF
[deferred_revenue_functions.py:1343 - load_base_billings()] SEK
[deferred_revenue_functions.py:1343 - load_base_billings()] DKK
[deferred_revenue_functions.py:1343 - load_base_billings()] NOK
[deferred_revenue_functions.py:1343 - load_base_billings()] CAD
[deferred_revenue_functions.py:1343 - load_base_billings()] HKD
[deferred_revenue_functions.py:1343 - load_base_billings()] BRL
[deferred_revenue_functions.py:1343 - load_base_billings()] RUB
[deferred_revenue_functions.py:1343 - load_base_billings()] KRW
[deferred_revenue_functions.py:1343 - load_base_billings()] SGD
[deferred_revenue_functions.py:1343 - load_base_billings()] CLP
[deferred_revenue_functions.py:1343 - load_base_billings()] COP
[deferred_revenue_functions.py:1343 - load_base_billings()] ARS
[deferred_revenue_functions.py:1343 - load_base_billings()] PEN
[deferred_revenue_functions.py:1343 - load_base_billings()] INR
[deferred_revenue_functions.py:1343 - load_base_billings()] PHP
[deferred_revenue_functions.py:1343 - load_base_billings()] TWD
[deferred_revenue_functions.py:1343 - load_base_billings()] THB
[deferred_revenue_functions.py:1343 - load_base_billings()] MYR
[deferred_revenue_functions.py:1343 - load_base_billings()] IDR
[deferred_revenue_functions.py:1343 - load_base_billings()] ILS
[deferred_revenue_functions.py:1343 - load_base_billings()] NZD
[deferred_revenue_functions.py:1346 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1349 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1351 - load_base_billings()] df.head(10) =    curr        BU Frequency   period config rev_req_type rebill_rule Sales Type  Subscription Term   DC_amount  US_amount
1   ARS  Creative       NaN  2019-03     1Y            D         NaN   DEFERRED                  1   -11291.52    -289.26
2   ARS  Creative       NaN  2019-03     1Y            D          Y3   DEFERRED                  1   373766.00    9601.19
3   ARS  Creative       NaN  2019-03     1Y            D          YA   DEFERRED                 12   241380.00    6194.45
4   ARS  Creative       NaN  2019-03  MTHLY            D         NaN   DEFERRED                  1    -1221.00     -31.07
5   ARS  Creative       NaN  2019-03  MTHLY            D          Y3   DEFERRED                  1    45799.00    1173.37
6   ARS  Creative       NaN  2019-04     1Y            D         NaN   DEFERRED                  1   -40014.70    -985.24
7   ARS  Creative       NaN  2019-04     1Y            D          Y3   DEFERRED                  1  1705471.00   42032.83
8   ARS  Creative       NaN  2019-04     1Y            D          YA   DEFERRED                 12  1112854.12   27486.58
9   ARS  Creative       NaN  2019-04  MTHLY            D         NaN   DEFERRED                  1   -14292.80    -351.04
10  ARS  Creative       NaN  2019-04  MTHLY            D          Y3   DEFERRED                  1   188938.00    4653.43
[deferred_revenue_functions.py:1354 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1357 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1361 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1378 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1389 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1395 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1396 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1403 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[<ipython-input-3-eecfdd511e4d>:1 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1309 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1325 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'OMR', 'LBP', 'BMD', 'MXP', 'AED', 'TRY']}
[deferred_revenue_functions.py:1326 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1328 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1330 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1331 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1338 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1341 - load_base_billings()] SAR
[deferred_revenue_functions.py:1341 - load_base_billings()] BHD
[deferred_revenue_functions.py:1341 - load_base_billings()] KWD
[deferred_revenue_functions.py:1341 - load_base_billings()] JOD
[deferred_revenue_functions.py:1341 - load_base_billings()] EGP
[deferred_revenue_functions.py:1341 - load_base_billings()] OMR
[deferred_revenue_functions.py:1341 - load_base_billings()] LBP
[deferred_revenue_functions.py:1341 - load_base_billings()] BMD
[deferred_revenue_functions.py:1341 - load_base_billings()] MXP
[deferred_revenue_functions.py:1341 - load_base_billings()] AED
[deferred_revenue_functions.py:1343 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1345 - load_base_billings()] USD
[deferred_revenue_functions.py:1345 - load_base_billings()] EUR
[deferred_revenue_functions.py:1345 - load_base_billings()] GBP
[deferred_revenue_functions.py:1345 - load_base_billings()] AUD
[deferred_revenue_functions.py:1345 - load_base_billings()] JPY
[deferred_revenue_functions.py:1345 - load_base_billings()] CHF
[deferred_revenue_functions.py:1345 - load_base_billings()] SEK
[deferred_revenue_functions.py:1345 - load_base_billings()] DKK
[deferred_revenue_functions.py:1345 - load_base_billings()] NOK
[deferred_revenue_functions.py:1345 - load_base_billings()] CAD
[deferred_revenue_functions.py:1345 - load_base_billings()] HKD
[deferred_revenue_functions.py:1345 - load_base_billings()] BRL
[deferred_revenue_functions.py:1345 - load_base_billings()] RUB
[deferred_revenue_functions.py:1345 - load_base_billings()] KRW
[deferred_revenue_functions.py:1345 - load_base_billings()] SGD
[deferred_revenue_functions.py:1345 - load_base_billings()] CLP
[deferred_revenue_functions.py:1345 - load_base_billings()] COP
[deferred_revenue_functions.py:1345 - load_base_billings()] ARS
[deferred_revenue_functions.py:1345 - load_base_billings()] INR
[deferred_revenue_functions.py:1345 - load_base_billings()] PEN
[deferred_revenue_functions.py:1345 - load_base_billings()] PHP
[deferred_revenue_functions.py:1345 - load_base_billings()] TWD
[deferred_revenue_functions.py:1345 - load_base_billings()] THB
[deferred_revenue_functions.py:1345 - load_base_billings()] MYR
[deferred_revenue_functions.py:1345 - load_base_billings()] IDR
[deferred_revenue_functions.py:1345 - load_base_billings()] ILS
[deferred_revenue_functions.py:1345 - load_base_billings()] NZD
[deferred_revenue_functions.py:1348 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1351 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1353 - load_base_billings()] df.head(10) =    curr        BU Frequency   period config rev_req_type rebill_rule Sales Type  Subscription Term   DC_amount  US_amount
1   ARS  Creative       NaN  2019-03     1Y            D         NaN   DEFERRED                  1   -11291.52    -289.26
2   ARS  Creative       NaN  2019-03     1Y            D          Y3   DEFERRED                  1   373766.00    9601.19
3   ARS  Creative       NaN  2019-03     1Y            D          YA   DEFERRED                 12   241380.00    6194.45
4   ARS  Creative       NaN  2019-03  MTHLY            D         NaN   DEFERRED                  1    -1221.00     -31.07
5   ARS  Creative       NaN  2019-03  MTHLY            D          Y3   DEFERRED                  1    45799.00    1173.37
6   ARS  Creative       NaN  2019-04     1Y            D         NaN   DEFERRED                  1   -40014.70    -985.24
7   ARS  Creative       NaN  2019-04     1Y            D          Y3   DEFERRED                  1  1705471.00   42032.83
8   ARS  Creative       NaN  2019-04     1Y            D          YA   DEFERRED                 12  1112854.12   27486.58
9   ARS  Creative       NaN  2019-04  MTHLY            D         NaN   DEFERRED                  1   -14292.80    -351.04
10  ARS  Creative       NaN  2019-04  MTHLY            D          Y3   DEFERRED                  1   188938.00    4653.43
[deferred_revenue_functions.py:1356 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1359 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1363 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1380 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1382 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1383 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1391 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1397 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1398 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1405 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[pyplot.py:219 -  switch_backend()] Loaded backend MacOSX version unknown.
[font_manager.py:1259 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactText.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal bold normal>) = 6.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactTextItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal black condensed>) = 10.725
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal bold condensed>) = 11.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal bold normal>) = 7.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal ultralight condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal bold normal>) = 4.971363636363637
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal bold normal>) = 3.9713636363636367
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 400 condensed>) = 10.25
[font_manager.py:1294 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/Users/davidsmith/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[font_manager.py:1259 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactText.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal bold normal>) = 6.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactTextItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal black condensed>) = 10.725
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal bold condensed>) = 11.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal bold normal>) = 7.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal ultralight condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal bold normal>) = 4.971363636363637
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal bold normal>) = 3.9713636363636367
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 400 condensed>) = 10.25
[font_manager.py:1294 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/davidsmith/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[font_manager.py:1259 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactText.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal bold normal>) = 6.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactTextItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal black condensed>) = 10.725
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal bold condensed>) = 11.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal bold normal>) = 7.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal ultralight condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal bold normal>) = 4.971363636363637
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal bold normal>) = 3.9713636363636367
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 400 condensed>) = 10.25
[font_manager.py:1294 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/davidsmith/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[cache.py:126 - _load_from_file_system()] pickle loaded: /Users/davidsmith/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py
[diff.py:213 -          update()] diff parser start
[diff.py:224 -          update()] line_lengths old: 1; new: 1
[diff.py:228 -          update()] -> code[replace] old[1:1] new[1:1]
[diff.py:341 -          _parse()] parse_part from 1 to 1 (to 0 in part parser)
[diff.py:264 -          update()] diff parser end
[deferred_revenue_forecast_v3.py:49 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1308 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1324 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'LBP', 'OMR', 'BMD', 'AED', 'MXP', 'TRY']}
[deferred_revenue_functions.py:1325 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1327 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1329 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1330 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1337 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1340 - load_base_billings()] SAR
[deferred_revenue_functions.py:1340 - load_base_billings()] BHD
[deferred_revenue_functions.py:1340 - load_base_billings()] KWD
[deferred_revenue_functions.py:1340 - load_base_billings()] JOD
[deferred_revenue_functions.py:1340 - load_base_billings()] EGP
[deferred_revenue_functions.py:1340 - load_base_billings()] LBP
[deferred_revenue_functions.py:1340 - load_base_billings()] OMR
[deferred_revenue_functions.py:1340 - load_base_billings()] BMD
[deferred_revenue_functions.py:1340 - load_base_billings()] AED
[deferred_revenue_functions.py:1340 - load_base_billings()] MXP
[deferred_revenue_functions.py:1342 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1344 - load_base_billings()] USD
[deferred_revenue_functions.py:1344 - load_base_billings()] EUR
[deferred_revenue_functions.py:1344 - load_base_billings()] GBP
[deferred_revenue_functions.py:1344 - load_base_billings()] AUD
[deferred_revenue_functions.py:1344 - load_base_billings()] JPY
[deferred_revenue_functions.py:1344 - load_base_billings()] CHF
[deferred_revenue_functions.py:1344 - load_base_billings()] SEK
[deferred_revenue_functions.py:1344 - load_base_billings()] DKK
[deferred_revenue_functions.py:1344 - load_base_billings()] NOK
[deferred_revenue_functions.py:1344 - load_base_billings()] CAD
[deferred_revenue_functions.py:1344 - load_base_billings()] HKD
[deferred_revenue_functions.py:1344 - load_base_billings()] BRL
[deferred_revenue_functions.py:1344 - load_base_billings()] RUB
[deferred_revenue_functions.py:1344 - load_base_billings()] KRW
[deferred_revenue_functions.py:1344 - load_base_billings()] SGD
[deferred_revenue_functions.py:1344 - load_base_billings()] CLP
[deferred_revenue_functions.py:1344 - load_base_billings()] COP
[deferred_revenue_functions.py:1344 - load_base_billings()] ARS
[deferred_revenue_functions.py:1344 - load_base_billings()] INR
[deferred_revenue_functions.py:1344 - load_base_billings()] PEN
[deferred_revenue_functions.py:1344 - load_base_billings()] PHP
[deferred_revenue_functions.py:1344 - load_base_billings()] TWD
[deferred_revenue_functions.py:1344 - load_base_billings()] THB
[deferred_revenue_functions.py:1344 - load_base_billings()] MYR
[deferred_revenue_functions.py:1344 - load_base_billings()] IDR
[deferred_revenue_functions.py:1344 - load_base_billings()] ILS
[deferred_revenue_functions.py:1344 - load_base_billings()] NZD
[deferred_revenue_functions.py:1347 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1350 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1352 - load_base_billings()] df.head(10) =    curr        BU Frequency  ... Subscription Term   DC_amount US_amount
1   ARS  Creative       NaN  ...                 1   -11291.52   -289.26
2   ARS  Creative       NaN  ...                 1   373766.00   9601.19
3   ARS  Creative       NaN  ...                12   241380.00   6194.45
4   ARS  Creative       NaN  ...                 1    -1221.00    -31.07
5   ARS  Creative       NaN  ...                 1    45799.00   1173.37
6   ARS  Creative       NaN  ...                 1   -40014.70   -985.24
7   ARS  Creative       NaN  ...                 1  1705471.00  42032.83
8   ARS  Creative       NaN  ...                12  1112854.12  27486.58
9   ARS  Creative       NaN  ...                 1   -14292.80   -351.04
10  ARS  Creative       NaN  ...                 1   188938.00   4653.43

[10 rows x 11 columns]
[deferred_revenue_functions.py:1355 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1358 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1362 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1382 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1390 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1396 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1397 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1404 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[deferred_revenue_forecast_v3.py:49 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1308 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1324 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'OMR', 'LBP', 'BMD', 'AED', 'MXP', 'TRY']}
[deferred_revenue_functions.py:1325 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1327 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1329 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1330 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1337 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1340 - load_base_billings()] SAR
[deferred_revenue_functions.py:1340 - load_base_billings()] BHD
[deferred_revenue_functions.py:1340 - load_base_billings()] KWD
[deferred_revenue_functions.py:1340 - load_base_billings()] JOD
[deferred_revenue_functions.py:1340 - load_base_billings()] EGP
[deferred_revenue_functions.py:1340 - load_base_billings()] OMR
[deferred_revenue_functions.py:1340 - load_base_billings()] LBP
[deferred_revenue_functions.py:1340 - load_base_billings()] BMD
[deferred_revenue_functions.py:1340 - load_base_billings()] AED
[deferred_revenue_functions.py:1340 - load_base_billings()] MXP
[deferred_revenue_functions.py:1342 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1344 - load_base_billings()] USD
[deferred_revenue_functions.py:1344 - load_base_billings()] EUR
[deferred_revenue_functions.py:1344 - load_base_billings()] GBP
[deferred_revenue_functions.py:1344 - load_base_billings()] AUD
[deferred_revenue_functions.py:1344 - load_base_billings()] JPY
[deferred_revenue_functions.py:1344 - load_base_billings()] CHF
[deferred_revenue_functions.py:1344 - load_base_billings()] SEK
[deferred_revenue_functions.py:1344 - load_base_billings()] DKK
[deferred_revenue_functions.py:1344 - load_base_billings()] NOK
[deferred_revenue_functions.py:1344 - load_base_billings()] CAD
[deferred_revenue_functions.py:1344 - load_base_billings()] HKD
[deferred_revenue_functions.py:1344 - load_base_billings()] BRL
[deferred_revenue_functions.py:1344 - load_base_billings()] RUB
[deferred_revenue_functions.py:1344 - load_base_billings()] KRW
[deferred_revenue_functions.py:1344 - load_base_billings()] SGD
[deferred_revenue_functions.py:1344 - load_base_billings()] CLP
[deferred_revenue_functions.py:1344 - load_base_billings()] COP
[deferred_revenue_functions.py:1344 - load_base_billings()] ARS
[deferred_revenue_functions.py:1344 - load_base_billings()] INR
[deferred_revenue_functions.py:1344 - load_base_billings()] PEN
[deferred_revenue_functions.py:1344 - load_base_billings()] PHP
[deferred_revenue_functions.py:1344 - load_base_billings()] TWD
[deferred_revenue_functions.py:1344 - load_base_billings()] THB
[deferred_revenue_functions.py:1344 - load_base_billings()] MYR
[deferred_revenue_functions.py:1344 - load_base_billings()] IDR
[deferred_revenue_functions.py:1344 - load_base_billings()] ILS
[deferred_revenue_functions.py:1344 - load_base_billings()] NZD
[deferred_revenue_functions.py:1347 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1350 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1352 - load_base_billings()] df.head(10) =    curr        BU Frequency  ... Subscription Term   DC_amount US_amount
1   ARS  Creative       NaN  ...                 1   -11291.52   -289.26
2   ARS  Creative       NaN  ...                 1   373766.00   9601.19
3   ARS  Creative       NaN  ...                12   241380.00   6194.45
4   ARS  Creative       NaN  ...                 1    -1221.00    -31.07
5   ARS  Creative       NaN  ...                 1    45799.00   1173.37
6   ARS  Creative       NaN  ...                 1   -40014.70   -985.24
7   ARS  Creative       NaN  ...                 1  1705471.00  42032.83
8   ARS  Creative       NaN  ...                12  1112854.12  27486.58
9   ARS  Creative       NaN  ...                 1   -14292.80   -351.04
10  ARS  Creative       NaN  ...                 1   188938.00   4653.43

[10 rows x 11 columns]
[deferred_revenue_functions.py:1355 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1358 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1362 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1382 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1390 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1396 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1397 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1404 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[deferred_revenue_forecast_v3.py:49 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1308 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1324 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'LBP', 'OMR', 'BMD', 'AED', 'MXP', 'TRY']}
[deferred_revenue_functions.py:1325 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1327 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1329 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1330 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1337 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1340 - load_base_billings()] SAR
[deferred_revenue_functions.py:1340 - load_base_billings()] BHD
[deferred_revenue_functions.py:1340 - load_base_billings()] KWD
[deferred_revenue_functions.py:1340 - load_base_billings()] JOD
[deferred_revenue_functions.py:1340 - load_base_billings()] EGP
[deferred_revenue_functions.py:1340 - load_base_billings()] LBP
[deferred_revenue_functions.py:1340 - load_base_billings()] OMR
[deferred_revenue_functions.py:1340 - load_base_billings()] BMD
[deferred_revenue_functions.py:1340 - load_base_billings()] AED
[deferred_revenue_functions.py:1340 - load_base_billings()] MXP
[deferred_revenue_functions.py:1342 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1344 - load_base_billings()] USD
[deferred_revenue_functions.py:1344 - load_base_billings()] EUR
[deferred_revenue_functions.py:1344 - load_base_billings()] GBP
[deferred_revenue_functions.py:1344 - load_base_billings()] AUD
[deferred_revenue_functions.py:1344 - load_base_billings()] JPY
[deferred_revenue_functions.py:1344 - load_base_billings()] CHF
[deferred_revenue_functions.py:1344 - load_base_billings()] SEK
[deferred_revenue_functions.py:1344 - load_base_billings()] DKK
[deferred_revenue_functions.py:1344 - load_base_billings()] NOK
[deferred_revenue_functions.py:1344 - load_base_billings()] CAD
[deferred_revenue_functions.py:1344 - load_base_billings()] HKD
[deferred_revenue_functions.py:1344 - load_base_billings()] BRL
[deferred_revenue_functions.py:1344 - load_base_billings()] RUB
[deferred_revenue_functions.py:1344 - load_base_billings()] KRW
[deferred_revenue_functions.py:1344 - load_base_billings()] SGD
[deferred_revenue_functions.py:1344 - load_base_billings()] CLP
[deferred_revenue_functions.py:1344 - load_base_billings()] COP
[deferred_revenue_functions.py:1344 - load_base_billings()] ARS
[deferred_revenue_functions.py:1344 - load_base_billings()] INR
[deferred_revenue_functions.py:1344 - load_base_billings()] PEN
[deferred_revenue_functions.py:1344 - load_base_billings()] PHP
[deferred_revenue_functions.py:1344 - load_base_billings()] TWD
[deferred_revenue_functions.py:1344 - load_base_billings()] THB
[deferred_revenue_functions.py:1344 - load_base_billings()] MYR
[deferred_revenue_functions.py:1344 - load_base_billings()] IDR
[deferred_revenue_functions.py:1344 - load_base_billings()] ILS
[deferred_revenue_functions.py:1344 - load_base_billings()] NZD
[deferred_revenue_functions.py:1347 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1350 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1352 - load_base_billings()] df.head(10) =    curr        BU Frequency  ... Subscription Term   DC_amount US_amount
1   ARS  Creative       NaN  ...                 1   -11291.52   -289.26
2   ARS  Creative       NaN  ...                 1   373766.00   9601.19
3   ARS  Creative       NaN  ...                12   241380.00   6194.45
4   ARS  Creative       NaN  ...                 1    -1221.00    -31.07
5   ARS  Creative       NaN  ...                 1    45799.00   1173.37
6   ARS  Creative       NaN  ...                 1   -40014.70   -985.24
7   ARS  Creative       NaN  ...                 1  1705471.00  42032.83
8   ARS  Creative       NaN  ...                12  1112854.12  27486.58
9   ARS  Creative       NaN  ...                 1   -14292.80   -351.04
10  ARS  Creative       NaN  ...                 1   188938.00   4653.43

[10 rows x 11 columns]
[deferred_revenue_functions.py:1355 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1358 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1362 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1382 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1390 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1396 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1397 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1404 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[deferred_revenue_forecast_v3.py:49 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1308 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1324 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'LBP', 'OMR', 'BMD', 'MXP', 'AED', 'TRY']}
[deferred_revenue_functions.py:1325 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1327 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1329 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1330 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1337 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1340 - load_base_billings()] SAR
[deferred_revenue_functions.py:1340 - load_base_billings()] BHD
[deferred_revenue_functions.py:1340 - load_base_billings()] KWD
[deferred_revenue_functions.py:1340 - load_base_billings()] JOD
[deferred_revenue_functions.py:1340 - load_base_billings()] EGP
[deferred_revenue_functions.py:1340 - load_base_billings()] LBP
[deferred_revenue_functions.py:1340 - load_base_billings()] OMR
[deferred_revenue_functions.py:1340 - load_base_billings()] BMD
[deferred_revenue_functions.py:1340 - load_base_billings()] MXP
[deferred_revenue_functions.py:1340 - load_base_billings()] AED
[deferred_revenue_functions.py:1342 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1344 - load_base_billings()] USD
[deferred_revenue_functions.py:1344 - load_base_billings()] EUR
[deferred_revenue_functions.py:1344 - load_base_billings()] GBP
[deferred_revenue_functions.py:1344 - load_base_billings()] AUD
[deferred_revenue_functions.py:1344 - load_base_billings()] JPY
[deferred_revenue_functions.py:1344 - load_base_billings()] CHF
[deferred_revenue_functions.py:1344 - load_base_billings()] SEK
[deferred_revenue_functions.py:1344 - load_base_billings()] DKK
[deferred_revenue_functions.py:1344 - load_base_billings()] NOK
[deferred_revenue_functions.py:1344 - load_base_billings()] CAD
[deferred_revenue_functions.py:1344 - load_base_billings()] HKD
[deferred_revenue_functions.py:1344 - load_base_billings()] BRL
[deferred_revenue_functions.py:1344 - load_base_billings()] RUB
[deferred_revenue_functions.py:1344 - load_base_billings()] KRW
[deferred_revenue_functions.py:1344 - load_base_billings()] SGD
[deferred_revenue_functions.py:1344 - load_base_billings()] CLP
[deferred_revenue_functions.py:1344 - load_base_billings()] COP
[deferred_revenue_functions.py:1344 - load_base_billings()] ARS
[deferred_revenue_functions.py:1344 - load_base_billings()] INR
[deferred_revenue_functions.py:1344 - load_base_billings()] PEN
[deferred_revenue_functions.py:1344 - load_base_billings()] PHP
[deferred_revenue_functions.py:1344 - load_base_billings()] TWD
[deferred_revenue_functions.py:1344 - load_base_billings()] THB
[deferred_revenue_functions.py:1344 - load_base_billings()] MYR
[deferred_revenue_functions.py:1344 - load_base_billings()] IDR
[deferred_revenue_functions.py:1344 - load_base_billings()] ILS
[deferred_revenue_functions.py:1344 - load_base_billings()] NZD
[deferred_revenue_functions.py:1347 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1350 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1352 - load_base_billings()] df.head(10) =    curr        BU Frequency  ... Subscription Term   DC_amount US_amount
1   ARS  Creative       NaN  ...                 1   -11291.52   -289.26
2   ARS  Creative       NaN  ...                 1   373766.00   9601.19
3   ARS  Creative       NaN  ...                12   241380.00   6194.45
4   ARS  Creative       NaN  ...                 1    -1221.00    -31.07
5   ARS  Creative       NaN  ...                 1    45799.00   1173.37
6   ARS  Creative       NaN  ...                 1   -40014.70   -985.24
7   ARS  Creative       NaN  ...                 1  1705471.00  42032.83
8   ARS  Creative       NaN  ...                12  1112854.12  27486.58
9   ARS  Creative       NaN  ...                 1   -14292.80   -351.04
10  ARS  Creative       NaN  ...                 1   188938.00   4653.43

[10 rows x 11 columns]
[deferred_revenue_functions.py:1355 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1358 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1362 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1382 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1390 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1396 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1397 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1404 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[<ipython-input-18-9fa92454159a>:1 -        <module>()] Processing the Base Billings Data
[<ipython-input-18-9fa92454159a>:1 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1308 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1324 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'OMR', 'LBP', 'BMD', 'MXP', 'AED', 'TRY']}
[deferred_revenue_functions.py:1325 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1327 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1329 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1330 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1337 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1340 - load_base_billings()] SAR
[deferred_revenue_functions.py:1340 - load_base_billings()] BHD
[deferred_revenue_functions.py:1340 - load_base_billings()] KWD
[deferred_revenue_functions.py:1340 - load_base_billings()] JOD
[deferred_revenue_functions.py:1340 - load_base_billings()] EGP
[deferred_revenue_functions.py:1340 - load_base_billings()] OMR
[deferred_revenue_functions.py:1340 - load_base_billings()] LBP
[deferred_revenue_functions.py:1340 - load_base_billings()] BMD
[deferred_revenue_functions.py:1340 - load_base_billings()] MXP
[deferred_revenue_functions.py:1340 - load_base_billings()] AED
[deferred_revenue_functions.py:1342 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1344 - load_base_billings()] USD
[deferred_revenue_functions.py:1344 - load_base_billings()] EUR
[deferred_revenue_functions.py:1344 - load_base_billings()] GBP
[deferred_revenue_functions.py:1344 - load_base_billings()] AUD
[deferred_revenue_functions.py:1344 - load_base_billings()] JPY
[deferred_revenue_functions.py:1344 - load_base_billings()] CHF
[deferred_revenue_functions.py:1344 - load_base_billings()] SEK
[deferred_revenue_functions.py:1344 - load_base_billings()] DKK
[deferred_revenue_functions.py:1344 - load_base_billings()] NOK
[deferred_revenue_functions.py:1344 - load_base_billings()] CAD
[deferred_revenue_functions.py:1344 - load_base_billings()] HKD
[deferred_revenue_functions.py:1344 - load_base_billings()] BRL
[deferred_revenue_functions.py:1344 - load_base_billings()] RUB
[deferred_revenue_functions.py:1344 - load_base_billings()] KRW
[deferred_revenue_functions.py:1344 - load_base_billings()] SGD
[deferred_revenue_functions.py:1344 - load_base_billings()] CLP
[deferred_revenue_functions.py:1344 - load_base_billings()] COP
[deferred_revenue_functions.py:1344 - load_base_billings()] ARS
[deferred_revenue_functions.py:1344 - load_base_billings()] INR
[deferred_revenue_functions.py:1344 - load_base_billings()] PEN
[deferred_revenue_functions.py:1344 - load_base_billings()] PHP
[deferred_revenue_functions.py:1344 - load_base_billings()] TWD
[deferred_revenue_functions.py:1344 - load_base_billings()] THB
[deferred_revenue_functions.py:1344 - load_base_billings()] MYR
[deferred_revenue_functions.py:1344 - load_base_billings()] IDR
[deferred_revenue_functions.py:1344 - load_base_billings()] ILS
[deferred_revenue_functions.py:1344 - load_base_billings()] NZD
[deferred_revenue_functions.py:1347 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1350 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1352 - load_base_billings()] df.head(10) =    curr        BU Frequency   period config rev_req_type rebill_rule Sales Type  Subscription Term   DC_amount  US_amount
1   ARS  Creative       NaN  2019-03     1Y            D         NaN   DEFERRED                  1   -11291.52    -289.26
2   ARS  Creative       NaN  2019-03     1Y            D          Y3   DEFERRED                  1   373766.00    9601.19
3   ARS  Creative       NaN  2019-03     1Y            D          YA   DEFERRED                 12   241380.00    6194.45
4   ARS  Creative       NaN  2019-03  MTHLY            D         NaN   DEFERRED                  1    -1221.00     -31.07
5   ARS  Creative       NaN  2019-03  MTHLY            D          Y3   DEFERRED                  1    45799.00    1173.37
6   ARS  Creative       NaN  2019-04     1Y            D         NaN   DEFERRED                  1   -40014.70    -985.24
7   ARS  Creative       NaN  2019-04     1Y            D          Y3   DEFERRED                  1  1705471.00   42032.83
8   ARS  Creative       NaN  2019-04     1Y            D          YA   DEFERRED                 12  1112854.12   27486.58
9   ARS  Creative       NaN  2019-04  MTHLY            D         NaN   DEFERRED                  1   -14292.80    -351.04
10  ARS  Creative       NaN  2019-04  MTHLY            D          Y3   DEFERRED                  1   188938.00    4653.43
[deferred_revenue_functions.py:1355 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1358 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1362 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1382 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1390 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1396 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1397 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1404 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[deferred_revenue_functions.py:1308 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1324 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'OMR', 'LBP', 'BMD', 'MXP', 'AED', 'TRY']}
[deferred_revenue_functions.py:1325 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1327 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1329 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1330 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1337 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1340 - load_base_billings()] SAR
[deferred_revenue_functions.py:1340 - load_base_billings()] BHD
[deferred_revenue_functions.py:1340 - load_base_billings()] KWD
[deferred_revenue_functions.py:1340 - load_base_billings()] JOD
[deferred_revenue_functions.py:1340 - load_base_billings()] EGP
[deferred_revenue_functions.py:1340 - load_base_billings()] OMR
[deferred_revenue_functions.py:1340 - load_base_billings()] LBP
[deferred_revenue_functions.py:1340 - load_base_billings()] BMD
[deferred_revenue_functions.py:1340 - load_base_billings()] MXP
[deferred_revenue_functions.py:1340 - load_base_billings()] AED
[deferred_revenue_functions.py:1342 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1344 - load_base_billings()] USD
[deferred_revenue_functions.py:1344 - load_base_billings()] EUR
[deferred_revenue_functions.py:1344 - load_base_billings()] GBP
[deferred_revenue_functions.py:1344 - load_base_billings()] AUD
[deferred_revenue_functions.py:1344 - load_base_billings()] JPY
[deferred_revenue_functions.py:1344 - load_base_billings()] CHF
[deferred_revenue_functions.py:1344 - load_base_billings()] SEK
[deferred_revenue_functions.py:1344 - load_base_billings()] DKK
[deferred_revenue_functions.py:1344 - load_base_billings()] NOK
[deferred_revenue_functions.py:1344 - load_base_billings()] CAD
[deferred_revenue_functions.py:1344 - load_base_billings()] HKD
[deferred_revenue_functions.py:1344 - load_base_billings()] BRL
[deferred_revenue_functions.py:1344 - load_base_billings()] RUB
[deferred_revenue_functions.py:1344 - load_base_billings()] KRW
[deferred_revenue_functions.py:1344 - load_base_billings()] SGD
[deferred_revenue_functions.py:1344 - load_base_billings()] CLP
[deferred_revenue_functions.py:1344 - load_base_billings()] COP
[deferred_revenue_functions.py:1344 - load_base_billings()] ARS
[deferred_revenue_functions.py:1344 - load_base_billings()] INR
[deferred_revenue_functions.py:1344 - load_base_billings()] PEN
[deferred_revenue_functions.py:1344 - load_base_billings()] PHP
[deferred_revenue_functions.py:1344 - load_base_billings()] TWD
[deferred_revenue_functions.py:1344 - load_base_billings()] THB
[deferred_revenue_functions.py:1344 - load_base_billings()] MYR
[deferred_revenue_functions.py:1344 - load_base_billings()] IDR
[deferred_revenue_functions.py:1344 - load_base_billings()] ILS
[deferred_revenue_functions.py:1344 - load_base_billings()] NZD
[deferred_revenue_functions.py:1347 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1350 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1352 - load_base_billings()] df.head(10) =    curr        BU Frequency   period config rev_req_type rebill_rule Sales Type  Subscription Term   DC_amount  US_amount
1   ARS  Creative       NaN  2019-03     1Y            D         NaN   DEFERRED                  1   -11291.52    -289.26
2   ARS  Creative       NaN  2019-03     1Y            D          Y3   DEFERRED                  1   373766.00    9601.19
3   ARS  Creative       NaN  2019-03     1Y            D          YA   DEFERRED                 12   241380.00    6194.45
4   ARS  Creative       NaN  2019-03  MTHLY            D         NaN   DEFERRED                  1    -1221.00     -31.07
5   ARS  Creative       NaN  2019-03  MTHLY            D          Y3   DEFERRED                  1    45799.00    1173.37
6   ARS  Creative       NaN  2019-04     1Y            D         NaN   DEFERRED                  1   -40014.70    -985.24
7   ARS  Creative       NaN  2019-04     1Y            D          Y3   DEFERRED                  1  1705471.00   42032.83
8   ARS  Creative       NaN  2019-04     1Y            D          YA   DEFERRED                 12  1112854.12   27486.58
9   ARS  Creative       NaN  2019-04  MTHLY            D         NaN   DEFERRED                  1   -14292.80    -351.04
10  ARS  Creative       NaN  2019-04  MTHLY            D          Y3   DEFERRED                  1   188938.00    4653.43
[deferred_revenue_functions.py:1355 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1358 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1362 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1382 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1390 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1396 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1397 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1404 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[pyplot.py:219 -  switch_backend()] Loaded backend MacOSX version unknown.
[font_manager.py:1259 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactText.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal bold normal>) = 6.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactTextItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal black condensed>) = 10.725
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal bold condensed>) = 11.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal bold normal>) = 7.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal ultralight condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal bold normal>) = 4.971363636363637
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal bold normal>) = 3.9713636363636367
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 400 condensed>) = 10.25
[font_manager.py:1294 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/Users/davidsmith/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[font_manager.py:1259 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactText.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal bold normal>) = 6.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactTextItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal black condensed>) = 10.725
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal bold condensed>) = 11.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal bold normal>) = 7.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal ultralight condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal bold normal>) = 4.971363636363637
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal bold normal>) = 3.9713636363636367
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 400 condensed>) = 10.25
[font_manager.py:1294 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/davidsmith/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[font_manager.py:1259 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactText.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal bold normal>) = 6.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactTextItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal black condensed>) = 10.725
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal bold condensed>) = 11.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal bold normal>) = 7.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal ultralight condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal bold normal>) = 4.971363636363637
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal bold normal>) = 3.9713636363636367
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 400 condensed>) = 10.25
[font_manager.py:1294 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/davidsmith/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[diff.py:213 -          update()] diff parser start
[diff.py:224 -          update()] line_lengths old: 1; new: 1
[diff.py:228 -          update()] -> code[replace] old[1:1] new[1:1]
[diff.py:341 -          _parse()] parse_part from 1 to 1 (to 0 in part parser)
[diff.py:264 -          update()] diff parser end
[diff.py:213 -          update()] diff parser start
[diff.py:224 -          update()] line_lengths old: 1; new: 1
[diff.py:228 -          update()] -> code[replace] old[1:1] new[1:1]
[diff.py:341 -          _parse()] parse_part from 1 to 1 (to 0 in part parser)
[diff.py:264 -          update()] diff parser end
[<ipython-input-39-9fa92454159a>:1 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1308 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1324 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'OMR', 'LBP', 'BMD', 'AED', 'MXP', 'TRY']}
[deferred_revenue_functions.py:1325 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1327 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1329 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1330 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1337 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1340 - load_base_billings()] SAR
[deferred_revenue_functions.py:1340 - load_base_billings()] BHD
[deferred_revenue_functions.py:1340 - load_base_billings()] KWD
[deferred_revenue_functions.py:1340 - load_base_billings()] JOD
[deferred_revenue_functions.py:1340 - load_base_billings()] EGP
[deferred_revenue_functions.py:1340 - load_base_billings()] OMR
[deferred_revenue_functions.py:1340 - load_base_billings()] LBP
[deferred_revenue_functions.py:1340 - load_base_billings()] BMD
[deferred_revenue_functions.py:1340 - load_base_billings()] AED
[deferred_revenue_functions.py:1340 - load_base_billings()] MXP
[deferred_revenue_functions.py:1342 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1344 - load_base_billings()] USD
[deferred_revenue_functions.py:1344 - load_base_billings()] EUR
[deferred_revenue_functions.py:1344 - load_base_billings()] GBP
[deferred_revenue_functions.py:1344 - load_base_billings()] AUD
[deferred_revenue_functions.py:1344 - load_base_billings()] JPY
[deferred_revenue_functions.py:1344 - load_base_billings()] CHF
[deferred_revenue_functions.py:1344 - load_base_billings()] SEK
[deferred_revenue_functions.py:1344 - load_base_billings()] DKK
[deferred_revenue_functions.py:1344 - load_base_billings()] NOK
[deferred_revenue_functions.py:1344 - load_base_billings()] CAD
[deferred_revenue_functions.py:1344 - load_base_billings()] HKD
[deferred_revenue_functions.py:1344 - load_base_billings()] BRL
[deferred_revenue_functions.py:1344 - load_base_billings()] RUB
[deferred_revenue_functions.py:1344 - load_base_billings()] KRW
[deferred_revenue_functions.py:1344 - load_base_billings()] SGD
[deferred_revenue_functions.py:1344 - load_base_billings()] CLP
[deferred_revenue_functions.py:1344 - load_base_billings()] COP
[deferred_revenue_functions.py:1344 - load_base_billings()] ARS
[deferred_revenue_functions.py:1344 - load_base_billings()] INR
[deferred_revenue_functions.py:1344 - load_base_billings()] PEN
[deferred_revenue_functions.py:1344 - load_base_billings()] PHP
[deferred_revenue_functions.py:1344 - load_base_billings()] TWD
[deferred_revenue_functions.py:1344 - load_base_billings()] THB
[deferred_revenue_functions.py:1344 - load_base_billings()] MYR
[deferred_revenue_functions.py:1344 - load_base_billings()] IDR
[deferred_revenue_functions.py:1344 - load_base_billings()] ILS
[deferred_revenue_functions.py:1344 - load_base_billings()] NZD
[deferred_revenue_functions.py:1347 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1350 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1352 - load_base_billings()] df.head(10) =    curr        BU Frequency   period config rev_req_type rebill_rule Sales Type  Subscription Term   DC_amount  US_amount
1   ARS  Creative       NaN  2019-03     1Y            D         NaN   DEFERRED                  1   -11291.52    -289.26
2   ARS  Creative       NaN  2019-03     1Y            D          Y3   DEFERRED                  1   373766.00    9601.19
3   ARS  Creative       NaN  2019-03     1Y            D          YA   DEFERRED                 12   241380.00    6194.45
4   ARS  Creative       NaN  2019-03  MTHLY            D         NaN   DEFERRED                  1    -1221.00     -31.07
5   ARS  Creative       NaN  2019-03  MTHLY            D          Y3   DEFERRED                  1    45799.00    1173.37
6   ARS  Creative       NaN  2019-04     1Y            D         NaN   DEFERRED                  1   -40014.70    -985.24
7   ARS  Creative       NaN  2019-04     1Y            D          Y3   DEFERRED                  1  1705471.00   42032.83
8   ARS  Creative       NaN  2019-04     1Y            D          YA   DEFERRED                 12  1112854.12   27486.58
9   ARS  Creative       NaN  2019-04  MTHLY            D         NaN   DEFERRED                  1   -14292.80    -351.04
10  ARS  Creative       NaN  2019-04  MTHLY            D          Y3   DEFERRED                  1   188938.00    4653.43
[deferred_revenue_functions.py:1355 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1358 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1362 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1379 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1380 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1381 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1382 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1390 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1396 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1397 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1404 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[pyplot.py:219 -  switch_backend()] Loaded backend MacOSX version unknown.
[font_manager.py:1259 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactText.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal bold normal>) = 6.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactTextItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal black condensed>) = 10.725
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal bold condensed>) = 11.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal bold normal>) = 7.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal ultralight condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal bold normal>) = 4.971363636363637
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal bold normal>) = 3.9713636363636367
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 400 condensed>) = 10.25
[font_manager.py:1294 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/Users/davidsmith/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[font_manager.py:1259 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactText.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal bold normal>) = 6.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactTextItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal black condensed>) = 10.725
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal bold condensed>) = 11.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal bold normal>) = 7.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal ultralight condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal bold normal>) = 4.971363636363637
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal bold normal>) = 3.9713636363636367
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 400 condensed>) = 10.25
[font_manager.py:1294 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/davidsmith/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[font_manager.py:1259 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactText.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal bold normal>) = 6.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Text' (SFCompactTextItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal semibold condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal black condensed>) = 10.725
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal bold condensed>) = 11.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal bold normal>) = 7.698636363636363
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal light condensed>) = 10.44
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal roman normal>) = 11.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal heavy condensed>) = 10.629999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal bold normal>) = 11.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal ultralight condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal bold normal>) = 4.971363636363637
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal medium condensed>) = 10.344999999999999
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal regular condensed>) = 10.25
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal bold condensed>) = 10.535
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal bold normal>) = 10.335
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal regular normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal bold normal>) = 3.9713636363636367
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
[font_manager.py:1271 - _findfont_cached()] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 400 condensed>) = 10.25
[font_manager.py:1294 - _findfont_cached()] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/davidsmith/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
[deferred_revenue_forecast_v3.py:49 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1299 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1315 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'LBP', 'OMR', 'BMD', 'MXP', 'AED', 'TRY']}
[deferred_revenue_functions.py:1316 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1318 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1320 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1321 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1328 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1331 - load_base_billings()] SAR
[deferred_revenue_functions.py:1331 - load_base_billings()] BHD
[deferred_revenue_functions.py:1331 - load_base_billings()] KWD
[deferred_revenue_functions.py:1331 - load_base_billings()] JOD
[deferred_revenue_functions.py:1331 - load_base_billings()] EGP
[deferred_revenue_functions.py:1331 - load_base_billings()] LBP
[deferred_revenue_functions.py:1331 - load_base_billings()] OMR
[deferred_revenue_functions.py:1331 - load_base_billings()] BMD
[deferred_revenue_functions.py:1331 - load_base_billings()] MXP
[deferred_revenue_functions.py:1331 - load_base_billings()] AED
[deferred_revenue_functions.py:1333 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1335 - load_base_billings()] USD
[deferred_revenue_functions.py:1335 - load_base_billings()] EUR
[deferred_revenue_functions.py:1335 - load_base_billings()] GBP
[deferred_revenue_functions.py:1335 - load_base_billings()] AUD
[deferred_revenue_functions.py:1335 - load_base_billings()] JPY
[deferred_revenue_functions.py:1335 - load_base_billings()] CHF
[deferred_revenue_functions.py:1335 - load_base_billings()] SEK
[deferred_revenue_functions.py:1335 - load_base_billings()] DKK
[deferred_revenue_functions.py:1335 - load_base_billings()] NOK
[deferred_revenue_functions.py:1335 - load_base_billings()] CAD
[deferred_revenue_functions.py:1335 - load_base_billings()] HKD
[deferred_revenue_functions.py:1335 - load_base_billings()] BRL
[deferred_revenue_functions.py:1335 - load_base_billings()] RUB
[deferred_revenue_functions.py:1335 - load_base_billings()] KRW
[deferred_revenue_functions.py:1335 - load_base_billings()] SGD
[deferred_revenue_functions.py:1335 - load_base_billings()] CLP
[deferred_revenue_functions.py:1335 - load_base_billings()] COP
[deferred_revenue_functions.py:1335 - load_base_billings()] ARS
[deferred_revenue_functions.py:1335 - load_base_billings()] INR
[deferred_revenue_functions.py:1335 - load_base_billings()] PEN
[deferred_revenue_functions.py:1335 - load_base_billings()] PHP
[deferred_revenue_functions.py:1335 - load_base_billings()] TWD
[deferred_revenue_functions.py:1335 - load_base_billings()] THB
[deferred_revenue_functions.py:1335 - load_base_billings()] MYR
[deferred_revenue_functions.py:1335 - load_base_billings()] IDR
[deferred_revenue_functions.py:1335 - load_base_billings()] ILS
[deferred_revenue_functions.py:1335 - load_base_billings()] NZD
[deferred_revenue_functions.py:1338 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1341 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1343 - load_base_billings()] df.head(10) =    curr        BU Frequency  ... Subscription Term   DC_amount US_amount
1   ARS  Creative       NaN  ...                 1   -11291.52   -289.26
2   ARS  Creative       NaN  ...                 1   373766.00   9601.19
3   ARS  Creative       NaN  ...                12   241380.00   6194.45
4   ARS  Creative       NaN  ...                 1    -1221.00    -31.07
5   ARS  Creative       NaN  ...                 1    45799.00   1173.37
6   ARS  Creative       NaN  ...                 1   -40014.70   -985.24
7   ARS  Creative       NaN  ...                 1  1705471.00  42032.83
8   ARS  Creative       NaN  ...                12  1112854.12  27486.58
9   ARS  Creative       NaN  ...                 1   -14292.80   -351.04
10  ARS  Creative       NaN  ...                 1   188938.00   4653.43

[10 rows x 11 columns]
[deferred_revenue_functions.py:1346 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1349 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1353 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1370 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1371 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1372 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1373 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1381 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1387 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1388 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1395 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
[deferred_revenue_forecast_v3.py:51 -        <module>()] Processing the Base Billings Data
[deferred_revenue_functions.py:1300 - load_base_billings()]  df_columns = Index(['curr', 'BU', 'Frequency', 'period', 'config', 'rev_req_type',
       'rebill_rule', 'Sales Type', 'Subscription Term', 'DC_amount',
       'US_amount'],
      dtype='object')
[deferred_revenue_functions.py:1316 - load_base_billings()] Model dictionary = {'curr_removed': ['SAR', 'BHD', 'KWD', 'JOD', 'EGP', 'LBP', 'OMR', 'BMD', 'MXP', 'AED', 'TRY']}
[deferred_revenue_functions.py:1317 - load_base_billings()] length of billings data before currencies removed = 44961
[deferred_revenue_functions.py:1319 - load_base_billings()] length of billings data AFTER currencies removed = 44784
[deferred_revenue_functions.py:1321 - load_base_billings()] ---Removing infrequent currencies from billings history---
[deferred_revenue_functions.py:1322 - load_base_billings()] Total number of currencies in the base billings file: 38
[deferred_revenue_functions.py:1329 - load_base_billings()] 
 Currencies were removed: 11
[deferred_revenue_functions.py:1332 - load_base_billings()] SAR
[deferred_revenue_functions.py:1332 - load_base_billings()] BHD
[deferred_revenue_functions.py:1332 - load_base_billings()] KWD
[deferred_revenue_functions.py:1332 - load_base_billings()] JOD
[deferred_revenue_functions.py:1332 - load_base_billings()] EGP
[deferred_revenue_functions.py:1332 - load_base_billings()] LBP
[deferred_revenue_functions.py:1332 - load_base_billings()] OMR
[deferred_revenue_functions.py:1332 - load_base_billings()] BMD
[deferred_revenue_functions.py:1332 - load_base_billings()] MXP
[deferred_revenue_functions.py:1332 - load_base_billings()] AED
[deferred_revenue_functions.py:1334 - load_base_billings()] 

 Remaining currencies: 27
[deferred_revenue_functions.py:1336 - load_base_billings()] USD
[deferred_revenue_functions.py:1336 - load_base_billings()] EUR
[deferred_revenue_functions.py:1336 - load_base_billings()] GBP
[deferred_revenue_functions.py:1336 - load_base_billings()] AUD
[deferred_revenue_functions.py:1336 - load_base_billings()] JPY
[deferred_revenue_functions.py:1336 - load_base_billings()] CHF
[deferred_revenue_functions.py:1336 - load_base_billings()] SEK
[deferred_revenue_functions.py:1336 - load_base_billings()] DKK
[deferred_revenue_functions.py:1336 - load_base_billings()] NOK
[deferred_revenue_functions.py:1336 - load_base_billings()] CAD
[deferred_revenue_functions.py:1336 - load_base_billings()] HKD
[deferred_revenue_functions.py:1336 - load_base_billings()] BRL
[deferred_revenue_functions.py:1336 - load_base_billings()] RUB
[deferred_revenue_functions.py:1336 - load_base_billings()] KRW
[deferred_revenue_functions.py:1336 - load_base_billings()] SGD
[deferred_revenue_functions.py:1336 - load_base_billings()] CLP
[deferred_revenue_functions.py:1336 - load_base_billings()] COP
[deferred_revenue_functions.py:1336 - load_base_billings()] ARS
[deferred_revenue_functions.py:1336 - load_base_billings()] INR
[deferred_revenue_functions.py:1336 - load_base_billings()] PEN
[deferred_revenue_functions.py:1336 - load_base_billings()] PHP
[deferred_revenue_functions.py:1336 - load_base_billings()] TWD
[deferred_revenue_functions.py:1336 - load_base_billings()] THB
[deferred_revenue_functions.py:1336 - load_base_billings()] MYR
[deferred_revenue_functions.py:1336 - load_base_billings()] IDR
[deferred_revenue_functions.py:1336 - load_base_billings()] ILS
[deferred_revenue_functions.py:1336 - load_base_billings()] NZD
[deferred_revenue_functions.py:1339 - load_base_billings()] This is the length of the dataframe before removing zeros: 44784
[deferred_revenue_functions.py:1342 - load_base_billings()] length of billings dataframe after removing zeros: 41941
[deferred_revenue_functions.py:1344 - load_base_billings()] df.head(10) =    curr        BU Frequency  ... Subscription Term   DC_amount US_amount
1   ARS  Creative       NaN  ...                 1   -11291.52   -289.26
2   ARS  Creative       NaN  ...                 1   373766.00   9601.19
3   ARS  Creative       NaN  ...                12   241380.00   6194.45
4   ARS  Creative       NaN  ...                 1    -1221.00    -31.07
5   ARS  Creative       NaN  ...                 1    45799.00   1173.37
6   ARS  Creative       NaN  ...                 1   -40014.70   -985.24
7   ARS  Creative       NaN  ...                 1  1705471.00  42032.83
8   ARS  Creative       NaN  ...                12  1112854.12  27486.58
9   ARS  Creative       NaN  ...                 1   -14292.80   -351.04
10  ARS  Creative       NaN  ...                 1   188938.00   4653.43

[10 rows x 11 columns]
[deferred_revenue_functions.py:1347 - load_base_billings()] Sales Type Value Counts = DEFERRED       35013
RECOGNIZED      5668
PRO-SVC-INV     1124
NON-REV          136
Name: Sales Type, dtype: int64
[deferred_revenue_functions.py:1350 - load_base_billings()] Length of the dataframe before removing non-revenue billings: 41941
[deferred_revenue_functions.py:1354 - load_base_billings()] Length of the dataframe after removing non-revenue billings: 41805
[deferred_revenue_functions.py:1371 - load_base_billings()] Total number of billings:     41805
[deferred_revenue_functions.py:1372 - load_base_billings()] Number of recognized revenue billings:  5668
[deferred_revenue_functions.py:1373 - load_base_billings()] Number of service invoiced billings:    1124
[deferred_revenue_functions.py:1374 - load_base_billings()] Number of deferred revenue billings:    35013
[deferred_revenue_functions.py:1382 - load_base_billings()]  gb_rec header :   curr        BU   period  DC_amount  US_amount
0  ARS  Creative  2019-07    6786.00     155.12
1  ARS  Creative  2019-08   16472.00     390.02
2  ARS  Creative  2019-09   19205.00     405.51
3  ARS  Creative  2019-10   30382.19     532.13
4  ARS  Creative  2019-11   59049.00    1023.67
5  ARS  Creative  2019-12   71355.57    1195.94
6  ARS  Creative  2020-01   79224.95    1323.41
7  ARS  Creative  2020-02   36596.00     611.42
8  ARS  Creative  2020-03   49107.00     810.06
9  ARS  Creative  2020-04   67878.00    1082.16
[deferred_revenue_functions.py:1388 - load_base_billings()]  gb_svc header :   curr                BU   period   DC_amount  US_amount
0  AUD  Experience Cloud  2016-01   528857.50  381205.10
1  AUD  Experience Cloud  2016-02   367175.25  254719.28
2  AUD  Experience Cloud  2016-03   974604.14  697281.64
3  AUD  Experience Cloud  2016-04   284306.25  215286.68
4  AUD  Experience Cloud  2016-05   127172.25   98554.88
5  AUD  Experience Cloud  2016-06  1364965.00  984510.08
6  AUD  Experience Cloud  2016-07   937308.26  702518.83
7  AUD  Experience Cloud  2016-08   632113.75  475127.60
8  AUD  Experience Cloud  2016-09   793855.90  603498.40
9  AUD  Experience Cloud  2016-10   392077.97  297718.82
[deferred_revenue_functions.py:1389 - load_base_billings()]  Group By Service header:    curr                BU   period   DC_amount  US_amount
0   AUD  Experience Cloud  2016-01   528857.50  381205.10
1   AUD  Experience Cloud  2016-02   367175.25  254719.28
2   AUD  Experience Cloud  2016-03   974604.14  697281.64
3   AUD  Experience Cloud  2016-04   284306.25  215286.68
4   AUD  Experience Cloud  2016-05   127172.25   98554.88
5   AUD  Experience Cloud  2016-06  1364965.00  984510.08
6   AUD  Experience Cloud  2016-07   937308.26  702518.83
7   AUD  Experience Cloud  2016-08   632113.75  475127.60
8   AUD  Experience Cloud  2016-09   793855.90  603498.40
9   AUD  Experience Cloud  2016-10   392077.97  297718.82
10  AUD  Experience Cloud  2016-11   521839.06  399176.79
11  AUD  Experience Cloud  2016-12  1087703.30  805407.01
12  AUD  Experience Cloud  2017-01   434154.00  321983.46
13  AUD  Experience Cloud  2017-02   437898.04  328988.07
14  AUD  Experience Cloud  2017-03  1128552.21  867288.93
[deferred_revenue_functions.py:1396 - load_base_billings()]  type B dataframe    curr                BU   period  DC_amount  US_amount
0   AUD          Creative  2017-10    8544.00    6837.59
1   AUD          DX Other  2017-04   13205.00   10082.02
2   AUD          DX Other  2017-08   27400.00   21259.93
3   AUD          DX Other  2018-07    6635.40    4908.74
4   AUD          DX Other  2018-08    7535.00    5561.43
5   AUD    Document Cloud  2017-12    3283.20    2494.58
6   AUD    Document Cloud  2018-06    3425.00    2592.18
7   AUD    Document Cloud  2018-12    3425.00    2483.47
8   AUD    Document Cloud  2019-03    4375.00    3122.00
9   AUD  Experience Cloud  2016-01  358720.00  258585.43
10  AUD  Experience Cloud  2016-02   65454.00   45782.42
11  AUD  Experience Cloud  2016-03  534646.20  358587.17
12  AUD  Experience Cloud  2016-04  130450.00   99763.68
13  AUD  Experience Cloud  2016-05  143240.00  109635.05
14  AUD  Experience Cloud  2016-06  437495.00  318573.05
15  AUD  Experience Cloud  2016-07  401600.00  296536.18
16  AUD  Experience Cloud  2016-08  273640.00  205221.19
17  AUD  Experience Cloud  2016-09  840903.73  642690.01
18  AUD  Experience Cloud  2016-10  128244.40   97060.59
19  AUD  Experience Cloud  2016-11  209291.96  156771.08
